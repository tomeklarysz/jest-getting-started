import { cipher } from "./cipher";

test('caesar cipher simple', () => {
  expect(cipher('xyz', 3)).toBe('abc')
})

test('simple uppercase', () => {
  expect(cipher('XYZ', 3)).toBe('ABC')
})

test('case preservation', () => {
  expect(cipher('HeLLo', 3)).toBe('KhOOr')
})

test('punctuation', () => {
  expect(cipher('Hello, World!', 3)).toBe('Khoor, Zruog!')
})

test('long string', () => {
  const longstr = 'ORUHP LSVXP GRORU VLW DPHW. XW LQYHQWRUH GRORUHPTXH QDP FRPPRGL PDJQDP VLW LSVD REFDHFDWL VHG HASOLFDER GRORUHP. DXW LXVWR FRQVHTXDWXU HVW GLVWLQFWLR HOLJHQGL TXL RPQLV IXJD LQ YHOLW LSVDP HW DSHULDP DOLTXLG HVW YHOLW ODERUH DXW GRORUHP VROXWD! TXL WHQHWXU YROXSWDWHP VLW GHOHFWXV VXVFLSLW KLF HVVH DGLSLVFL HVW QRVWUXP GRORULEXV XW GRORUHV DXWHP DW VXVFLSLW TXLGHP XW HASOLFDER DFFXVDQWLXP.'
  const encrypted = 'RUXKS OVYAS JURUX YOZ GSKZ. AZ OTBKTZUXK JURUXKSWAK TGS IUSSUJO SGMTGS YOZ OVYG UHIGKIGZO YKJ KDVROIGHU JURUXKS. GAZ OAYZU IUTYKWAGZAX KYZ JOYZOTIZOU KROMKTJO WAO USTOY LAMG OT BKROZ OVYGS KZ GVKXOGS GROWAOJ KYZ BKROZ RGHUXK GAZ JURUXKS YURAZG! WAO ZKTKZAX BURAVZGZKS YOZ JKRKIZAY YAYIOVOZ NOI KYYK GJOVOYIO KYZ TUYZXAS JURUXOHAY AZ JURUXKY GAZKS GZ YAYIOVOZ WAOJKS AZ KDVROIGHU GIIAYGTZOAS.'
  expect(cipher(longstr, 3)).toBe(encrypted)
})